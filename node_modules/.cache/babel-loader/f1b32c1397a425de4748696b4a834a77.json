{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport Navbar from '../components/Navbar';\nimport React, { Component } from 'react';\nimport ImageGrid from '../components/ImageGrid';\nimport ImageModal from '../components/ImageModal';\nimport Head from \"next-server/head\";\n\nvar work =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(work, _Component);\n\n  function work(props) {\n    var _this;\n\n    _classCallCheck(this, work);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(work).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickImage\", function (index) {\n      _this.setState({\n        selectedIndex: index,\n        forceRemoveNav: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeImageModal\", function () {\n      return _this.setState({\n        selectedIndex: undefined,\n        forceRemoveNav: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickNextImage\", function () {\n      var _this$state = _this.state,\n          selectedIndex = _this$state.selectedIndex,\n          images = _this$state.images;\n\n      if (selectedIndex < images.length - 1) {\n        _this.setState({\n          selectedIndex: selectedIndex + 1\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickPrevImage\", function () {\n      var selectedIndex = _this.state.selectedIndex;\n\n      if (selectedIndex > 0) {\n        _this.setState({\n          selectedIndex: selectedIndex - 1\n        });\n      }\n    });\n\n    _this.state = {\n      images: undefined,\n      selectedIndex: undefined,\n      forceRemoveNav: false\n    };\n    return _this;\n  }\n\n  _createClass(work, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var images = require('../static/images/images.json').images;\n\n      this.setState({\n        images: images\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          images = _this$state2.images,\n          selectedIndex = _this$state2.selectedIndex,\n          forceRemoveNav = _this$state2.forceRemoveNav;\n      return React.createElement(\"div\", {\n        className: \"jsx-2020520460\"\n      }, React.createElement(Head, null, React.createElement(\"title\", {\n        className: \"jsx-2020520460\"\n      }, \"Ifa Brand\"), React.createElement(\"link\", {\n        href: \"https://fonts.googleapis.com/css?family=Roboto\",\n        rel: \"stylesheet\",\n        className: \"jsx-2020520460\"\n      }), React.createElement(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width, initial-scale=1.0\",\n        className: \"jsx-2020520460\"\n      })), selectedIndex !== undefined && React.createElement(ImageModal, {\n        image: images[selectedIndex],\n        onClickClose: this.closeImageModal,\n        onClickNext: this.onClickNextImage,\n        onClickPrev: this.onClickPrevImage\n      }), React.createElement(Navbar, {\n        forceRemoveNav: forceRemoveNav\n      }), images && React.createElement(ImageGrid, {\n        images: images,\n        onClickImage: this.onClickImage\n      }), React.createElement(_JSXStyle, {\n        id: \"2020520460\"\n      }, [\"*.jsx-2020520460{font-family:'Roboto',sans-serif;}\", \"div.jsx-2020520460{margin:0;padding:10px 50px;}\", \"@media (max-width:950px){div.jsx-2020520460{padding:10px 0;}}\"]));\n    }\n  }]);\n\n  return work;\n}(Component);\n\nexport { work as default };","map":null,"metadata":{},"sourceType":"module"}